// 主要逻辑代码

// 一些原生dom组件
const [ 输入, 输入框, 框, 头部, 事项, 标题, 描述 ] = 生成组件('input', 'textarea', '框', '头部', '事项', '标题', '描述');

const 事项组件 = 生成组件(class 临时组件 extends React.Component {
    触摸组件() {
        const { 事件, 触发长按 } = this.props;
        this.延时任务 = 延时执行(() => 触发长按(事件.标识), 300);
    }
    触摸结束() {
        取消延时执行(this.延时任务);
    }

    render(){
        const { 事件, 状态变更 } = this.props;
        return 事项(
            {
                样式类: [事件.完成状态 ? '已完成' : '未完成', 事件.选中 ? '选中' : ''].合并成字符串(' '),
                onClick: () => 状态变更(事件.标识),
                onTouchStart: () => this.触摸组件(),
                onTouchEnd: () => this.触摸结束()
            },
            框(
                {
                    样式: { flexGrow: 1 }
                },
                标题(事件.标题),
                描述(事件.描述),
            ),
            框({样式类: '完成框'}, 事件.完成状态 ? '已完成' : '未完成')
        );
    }
});

const 待办事项列表 = 生成组件(链接组件(({待办事项, 待办事项控制器}) => {
    React.useEffect(() => {
        待办事项控制器.网络数据初始化();
    },[待办事项控制器]);
    return 框(
        {
            样式类: '列表'
        },
        ...待办事项.映射(事件 => 事项组件({
            事件,
            状态变更: (标识) => 待办事项控制器.状态变更(标识),
            触发长按: (标识) => 待办事项控制器.提交('标记为选中', 标识)
        }))
    );
}, 总数据集 => {
    const 待办事项 = 总数据集.待办事项.获取状态();
    return {
        待办事项: 待办事项.事项列表,
        待办事项控制器: 总数据集.待办事项
    };
}));

const 操作浮栏 = 生成组件(链接组件(({选中事项,控制器}) => {
    return 框(
        {
            样式类: `操作栏 ${选中事项?'显示':''}`,
            onClick: () => 控制器.提交('删除选中事项')
        },
        框({样式类: '删除'},'删除')
    );
}, (总数据集) => {
    const 待办事项 = 总数据集.待办事项.获取状态();
    return {
        选中事项: 待办事项.事项列表.找到(事件 => 事件.选中),
        控制器: 总数据集.待办事项
    };
}));

const 事项编辑弹窗 = 生成组件(链接组件(({ 控制器 }) => {
    const [弹窗状态, 设置状态] = React.useState(false);
    const 输入元素 = React.useRef(null);
    const 输入框元素 = React.useRef(null);
    return 框(
        {
            样式类: `编辑弹窗 ${弹窗状态?'弹窗状态':'按钮状态'}`
        },
        框({样式类: '添加按钮', onClick: ()=>设置状态(!弹窗状态)}, '+'),
        框(
            {样式类: '编辑框'},
            输入({placeholder:'标题', ref: 输入元素}),
            输入框({placeholder:'详细描述', ref: 输入框元素}),
            框({
                样式类:'确定按钮', 
                onClick: () => {
                    设置状态(!弹窗状态);
                    控制器.新增事件({
                        标题: 输入元素.current.value,
                        描述: 输入框元素.current.value,
                    });
                    输入元素.current.value = '';
                    输入框元素.current.value = ''
                }
            },'确定')
        )
    );
}, (总数据集) => {
    return {控制器: 总数据集.待办事项};
}));

const 主应用 = 生成组件(() => (
    框(
        头部('这是一个标题'),
        待办事项列表(),
        事项编辑弹窗(),
        操作浮栏()
    )
));

(function(){
    const 根元素 = 创建元素('根元素');
    元素(document.body).添加(根元素);

    const store = 构建Store({
        待办事项: new 待办事项状态管理()
    });

    const 状态注入 = 生成组件(创建Provider(store));
    // 主逻辑
    ReactDOM.render(
        状态注入(
            主应用()
        ),
        元素(document).找到('根元素')
    );
})();